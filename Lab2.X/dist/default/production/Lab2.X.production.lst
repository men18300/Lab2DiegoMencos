

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 16:16:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0211                     __pidataBANK0:
   370                           
   371                           ;initializer for _numeros
   372  0211  343F               	retlw	63
   373  0212  3400               	retlw	0
   374  0213  3407               	retlw	7
   375  0214  3400               	retlw	0
   376  0215  344F               	retlw	79
   377  0216  3400               	retlw	0
   378  0217  3466               	retlw	102
   379  0218  3400               	retlw	0
   380  0219  346D               	retlw	109
   381  021A  3400               	retlw	0
   382  021B  347D               	retlw	125
   383  021C  3400               	retlw	0
   384  021D  3447               	retlw	71
   385  021E  3400               	retlw	0
   386  021F  347F               	retlw	127
   387  0220  3400               	retlw	0
   388  0221  346F               	retlw	111
   389  0222  3400               	retlw	0
   390  0223  3477               	retlw	119
   391  0224  3400               	retlw	0
   392  0225  347C               	retlw	124
   393  0226  3400               	retlw	0
   394  0227  3439               	retlw	57
   395  0228  3400               	retlw	0
   396  0229  345E               	retlw	94
   397  022A  3400               	retlw	0
   398  022B  3479               	retlw	121
   399  022C  3400               	retlw	0
   400  022D  3471               	retlw	113
   401  022E  3400               	retlw	0
   402  022F  3400               	retlw	0
   403  0230  3400               	retlw	0
   404  0009                     _PORTE	set	9
   405  0006                     _PORTB	set	6
   406  0005                     _PORTA	set	5
   407  001F                     _ADCON0bits	set	31
   408  0007                     _PORTC	set	7
   409  001E                     _ADRESH	set	30
   410  000C                     _PIR1bits	set	12
   411  0008                     _PORTD	set	8
   412  0006                     _PORTBbits	set	6
   413  000B                     _INTCONbits	set	11
   414  0086                     _TRISBbits	set	134
   415  0089                     _TRISEbits	set	137
   416  0085                     _TRISAbits	set	133
   417  008C                     _PIE1bits	set	140
   418  009F                     _ADCON1bits	set	159
   419  0096                     _IOCBbits	set	150
   420  0089                     _TRISE	set	137
   421  0088                     _TRISD	set	136
   422  0087                     _TRISC	set	135
   423  0086                     _TRISB	set	134
   424  0085                     _TRISA	set	133
   425  0189                     _ANSELHbits	set	393
   426  0188                     _ANSELbits	set	392
   427  0189                     _ANSELH	set	393
   428  0188                     _ANSEL	set	392
   429                           
   430                           	psect	cinit
   431  0013                     start_initialization:	
   432                           ; #config settings
   433                           
   434  0013                     __initialization:
   435                           
   436                           ; Initialize objects allocated to BANK0
   437  0013  1383               	bcf	3,7	;select IRP bank0
   438  0014  3040               	movlw	low (__pdataBANK0+32)
   439  0015  00FD               	movwf	btemp+-1
   440  0016  3002               	movlw	high __pidataBANK0
   441  0017  00FE               	movwf	btemp
   442  0018  3011               	movlw	low __pidataBANK0
   443  0019  00FF               	movwf	btemp+1
   444  001A  3020               	movlw	low __pdataBANK0
   445  001B  0084               	movwf	4
   446  001C  120A  118A  2235  120A  118A  	fcall	init_ram0
   447                           
   448                           ; Clear objects allocated to COMMON
   449  0021  01F8               	clrf	__pbssCOMMON& (0+127)
   450  0022  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   451  0023  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   452  0024                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  0024                     __end_of__initialization:
   456  0024  0183               	clrf	3
   457  0025  120A  118A  29F0   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  0078                     __pbssCOMMON:
   461  0078                     _hexa2:
   462  0078                     	ds	1
   463  0079                     _hexa1:
   464  0079                     	ds	1
   465  007A                     _contador:
   466  007A                     	ds	1
   467                           
   468                           	psect	dataBANK0
   469  0020                     __pdataBANK0:
   470  0020                     _numeros:
   471  0020                     	ds	32
   472                           
   473                           	psect	inittext
   474  0231                     init_fetch0:	
   475                           ;	Called with low address in FSR and high address in W
   476                           
   477  0231  087E               	movf	btemp,w
   478  0232  008A               	movwf	10
   479  0233  087F               	movf	btemp+1,w
   480  0234  0082               	movwf	2
   481  0235                     init_ram0:	
   482                           ;Called with:
   483                           ;	high address of idata address in btemp 
   484                           ;	low address of idata address in btemp+1 
   485                           ;	low address of data in FSR
   486                           ;	high address + 1 of data in btemp-1
   487                           
   488  0235  120A  118A  2231  120A  118A  	fcall	init_fetch0
   489  023A  0080               	movwf	0
   490  023B  0A84               	incf	4,f
   491  023C  0804               	movf	4,w
   492  023D  067D               	xorwf	btemp+-1,w
   493  023E  1903               	btfsc	3,2
   494  023F  3400               	retlw	0
   495  0240  0AFF               	incf	btemp+1,f
   496  0241  1903               	btfsc	3,2
   497  0242  0AFE               	incf	btemp,f
   498  0243  2A35               	goto	init_ram0
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:
   502  0070                     ?_delay:
   503  0070                     ?_setup:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_isr:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?i1_delay:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??i1_delay:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     delay@n:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     i1delay@i:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 2 bytes @ 0x0
   526  0070                     	ds	2
   527  0072                     i1delay@j:
   528                           
   529                           ; 2 bytes @ 0x2
   530  0072                     	ds	2
   531  0074                     ??_isr:
   532                           
   533                           ; 1 bytes @ 0x4
   534  0074                     	ds	4
   535                           
   536                           	psect	cstackBANK0
   537  0040                     __pcstackBANK0:
   538  0040                     ??_delay:
   539  0040                     ??_setup:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0040                     ?_ADC:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0040                     ADC@justificado:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0040                     delay@i:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 2 bytes @ 0x0
   553  0040                     	ds	1
   554  0041                     ??_ADC:
   555                           
   556                           ; 1 bytes @ 0x1
   557  0041                     	ds	1
   558  0042                     delay@j:
   559                           
   560                           ; 2 bytes @ 0x2
   561  0042                     	ds	1
   562  0043                     ADC@ANA:
   563                           
   564                           ; 1 bytes @ 0x3
   565  0043                     	ds	1
   566  0044                     ??_main:
   567                           
   568                           	psect	maintext
   569  01F0                     __pmaintext:	
   570                           ; 1 bytes @ 0x4
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 89 in file "Lab2Digital.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : B00/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels required when called:    3
   596 ;; This function calls:
   597 ;;		_ADC
   598 ;;		_delay
   599 ;;		_setup
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _main
   607  01F0                     _main:
   608  01F0                     l1088:	
   609                           ;incstack = 0
   610                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   611                           
   612                           
   613                           ;Lab2Digital.c: 90:     PORTE = 0;
   614  01F0  120A  118A  2198  120A  118A  	fcall	_setup
   615  01F5                     l1090:
   616                           
   617                           ;Lab2Digital.c: 91:     INTCONbits.GIE = 1;
   618  01F5  3088               	movlw	136
   619  01F6  120A  118A  2133  120A  118A  	fcall	_delay
   620  01FB                     l1092:
   621                           
   622                           ;Lab2Digital.c: 92:     INTCONbits.PEIE = 1;
   623  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   624  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   625  01FD  01C0               	clrf	ADC@justificado
   626  01FE  3000               	movlw	0
   627  01FF  120A  118A  2028  120A  118A  	fcall	_ADC
   628  0204                     l1094:
   629                           
   630                           ;Lab2Digital.c: 93:     INTCONbits.RBIE = 1;
   631  0204  1283               	bcf	3,5	;RP0=0, select bank0
   632  0205  1303               	bcf	3,6	;RP1=0, select bank0
   633  0206  149F               	bsf	31,1	;volatile
   634  0207                     l1096:
   635  0207  3088               	movlw	136
   636  0208  120A  118A  2133  120A  118A  	fcall	_delay
   637  020D  2A07               	goto	l1096
   638  020E  120A  118A  2810   	ljmp	start
   639  0211                     __end_of_main:
   640                           
   641                           	psect	text1
   642  0198                     __ptext1:	
   643 ;; *************** function _setup *****************
   644 ;; Defined at:
   645 ;;		line 111 in file "Lab2Digital.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    2
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _setup
   675  0198                     _setup:
   676  0198                     l964:	
   677                           ;incstack = 0
   678                           ; Regs used in _setup: [wreg+status,2]
   679                           
   680  0198  1683               	bsf	3,5	;RP0=1, select bank3
   681  0199  1703               	bsf	3,6	;RP1=1, select bank3
   682  019A  0188               	clrf	8	;volatile
   683  019B  0189               	clrf	9	;volatile
   684  019C  1683               	bsf	3,5	;RP0=1, select bank1
   685  019D  1303               	bcf	3,6	;RP1=0, select bank1
   686  019E  0185               	clrf	5	;volatile
   687  019F  1283               	bcf	3,5	;RP0=0, select bank0
   688  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   689  01A1  0185               	clrf	5	;volatile
   690  01A2                     l966:
   691  01A2  3003               	movlw	3
   692  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   693  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   694  01A5  0086               	movwf	6	;volatile
   695  01A6                     l968:
   696  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   697  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   698  01A8  0186               	clrf	6	;volatile
   699  01A9                     l970:
   700  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   701  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   702  01AB  0187               	clrf	7	;volatile
   703  01AC                     l972:
   704  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   705  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   706  01AE  0187               	clrf	7	;volatile
   707  01AF                     l974:
   708  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   709  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   710  01B1  0188               	clrf	8	;volatile
   711  01B2                     l976:
   712  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   713  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   714  01B4  0188               	clrf	8	;volatile
   715  01B5                     l978:
   716  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   717  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   718  01B7  0189               	clrf	9	;volatile
   719  01B8                     l980:
   720  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   721  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   722  01BA  0189               	clrf	9	;volatile
   723  01BB                     l982:
   724  01BB  178B               	bsf	11,7	;volatile
   725  01BC                     l984:
   726  01BC  170B               	bsf	11,6	;volatile
   727  01BD                     l986:
   728  01BD  158B               	bsf	11,3	;volatile
   729  01BE                     l988:
   730  01BE  100B               	bcf	11,0	;volatile
   731  01BF                     l990:
   732  01BF  1683               	bsf	3,5	;RP0=1, select bank1
   733  01C0  1303               	bcf	3,6	;RP1=0, select bank1
   734  01C1  1416               	bsf	22,0	;volatile
   735  01C2                     l992:
   736  01C2  1496               	bsf	22,1	;volatile
   737  01C3                     l994:
   738                           
   739                           ;Lab2Digital.c: 147:     contador = 0;
   740  01C3  01FA               	clrf	_contador
   741  01C4                     l71:
   742  01C4  0008               	return
   743  01C5                     __end_of_setup:
   744                           
   745                           	psect	text2
   746  0133                     __ptext2:	
   747 ;; *************** function _delay *****************
   748 ;; Defined at:
   749 ;;		line 151 in file "Lab2Digital.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  n               1    wreg     unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  n               1    0[COMMON] unsigned char 
   754 ;;  j               2    2[BANK0 ] int 
   755 ;;  i               2    0[BANK0 ] int 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, btemp+1
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       4       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       4       0       0       0
   769 ;;Total ram usage:        4 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _delay
   781  0133                     _delay:
   782  0133                     l944:	
   783                           ;incstack = 0
   784                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   785                           
   786                           
   787                           ;Lab2Digital.c: 152:     for (int i = 0; i < 255; i++) {
   788  0133  1283               	bcf	3,5	;RP0=0, select bank0
   789  0134  1303               	bcf	3,6	;RP1=0, select bank0
   790  0135  01C0               	clrf	delay@i
   791  0136  01C1               	clrf	delay@i+1
   792  0137                     l950:
   793                           
   794                           ;Lab2Digital.c: 153:         for (int j = 0; j < 255; j++) {
   795  0137  1283               	bcf	3,5	;RP0=0, select bank0
   796  0138  1303               	bcf	3,6	;RP1=0, select bank0
   797  0139  01C2               	clrf	delay@j
   798  013A  01C3               	clrf	delay@j+1
   799  013B                     l956:
   800                           
   801                           ;Lab2Digital.c: 154:         }
   802  013B  3001               	movlw	1
   803  013C  1283               	bcf	3,5	;RP0=0, select bank0
   804  013D  1303               	bcf	3,6	;RP1=0, select bank0
   805  013E  07C2               	addwf	delay@j,f
   806  013F  1803               	skipnc
   807  0140  0AC3               	incf	delay@j+1,f
   808  0141  3000               	movlw	0
   809  0142  07C3               	addwf	delay@j+1,f
   810  0143                     l958:
   811  0143  0843               	movf	delay@j+1,w
   812  0144  3A80               	xorlw	128
   813  0145  00FF               	movwf	btemp+1
   814  0146  3080               	movlw	128
   815  0147  027F               	subwf	btemp+1,w
   816  0148  1D03               	skipz
   817  0149  294C               	goto	u115
   818  014A  30FF               	movlw	255
   819  014B  0242               	subwf	delay@j,w
   820  014C                     u115:
   821  014C  1C03               	skipc
   822  014D  294F               	goto	u111
   823  014E  2950               	goto	u110
   824  014F                     u111:
   825  014F  293B               	goto	l956
   826  0150                     u110:
   827  0150                     l960:
   828                           
   829                           ;Lab2Digital.c: 155:     }
   830  0150  3001               	movlw	1
   831  0151  1283               	bcf	3,5	;RP0=0, select bank0
   832  0152  1303               	bcf	3,6	;RP1=0, select bank0
   833  0153  07C0               	addwf	delay@i,f
   834  0154  1803               	skipnc
   835  0155  0AC1               	incf	delay@i+1,f
   836  0156  3000               	movlw	0
   837  0157  07C1               	addwf	delay@i+1,f
   838  0158                     l962:
   839  0158  0841               	movf	delay@i+1,w
   840  0159  3A80               	xorlw	128
   841  015A  00FF               	movwf	btemp+1
   842  015B  3080               	movlw	128
   843  015C  027F               	subwf	btemp+1,w
   844  015D  1D03               	skipz
   845  015E  2961               	goto	u125
   846  015F  30FF               	movlw	255
   847  0160  0240               	subwf	delay@i,w
   848  0161                     u125:
   849  0161  1C03               	skipc
   850  0162  2964               	goto	u121
   851  0163  2965               	goto	u120
   852  0164                     u121:
   853  0164  2937               	goto	l950
   854  0165                     u120:
   855  0165                     l78:
   856  0165  0008               	return
   857  0166                     __end_of_delay:
   858                           
   859                           	psect	text3
   860  0028                     __ptext3:	
   861 ;; *************** function _ADC *****************
   862 ;; Defined at:
   863 ;;		line 3 in file "ADC.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  ANA             1    wreg     unsigned char 
   866 ;;  justificado     1    0[BANK0 ] unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  ANA             1    3[BANK0 ] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       1       0       0       0
   879 ;;      Locals:         0       1       0       0       0
   880 ;;      Temps:          0       2       0       0       0
   881 ;;      Totals:         0       4       0       0       0
   882 ;;Total ram usage:        4 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    2
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _ADC
   894  0028                     _ADC:
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0]
   898                           ;ADC@ANA stored from wreg
   899  0028  1283               	bcf	3,5	;RP0=0, select bank0
   900  0029  1303               	bcf	3,6	;RP1=0, select bank0
   901  002A  00C3               	movwf	ADC@ANA
   902  002B                     l996:
   903                           
   904                           ;ADC.c: 6:     ADCON0bits.ADON = 1;
   905  002B  141F               	bsf	31,0	;volatile
   906  002C                     l998:
   907                           
   908                           ;ADC.c: 7:     ADCON0bits.ADCS = 0b10;
   909  002C  081F               	movf	31,w	;volatile
   910  002D  393F               	andlw	-193
   911  002E  3880               	iorlw	128
   912  002F  009F               	movwf	31	;volatile
   913  0030                     l1000:
   914                           
   915                           ;ADC.c: 8:     ADCON1bits.VCFG1 = 0;
   916  0030  1683               	bsf	3,5	;RP0=1, select bank1
   917  0031  1303               	bcf	3,6	;RP1=0, select bank1
   918  0032  129F               	bcf	31,5	;volatile
   919  0033                     l1002:
   920                           
   921                           ;ADC.c: 9:     ADCON1bits.VCFG0 = 0;
   922  0033  121F               	bcf	31,4	;volatile
   923  0034                     l1004:
   924                           
   925                           ;ADC.c: 10:     PIE1bits.ADIE = 1;
   926  0034  170C               	bsf	12,6	;volatile
   927  0035                     l1006:
   928                           
   929                           ;ADC.c: 11:     PIR1bits.ADIF = 0;
   930  0035  1283               	bcf	3,5	;RP0=0, select bank0
   931  0036  1303               	bcf	3,6	;RP1=0, select bank0
   932  0037  130C               	bcf	12,6	;volatile
   933                           
   934                           ;ADC.c: 13:     if (justificado == 0) {
   935  0038  0840               	movf	ADC@justificado,w
   936  0039  1D03               	btfss	3,2
   937  003A  283C               	goto	u131
   938  003B  283D               	goto	u130
   939  003C                     u131:
   940  003C  292A               	goto	l1044
   941  003D                     u130:
   942  003D                     l1008:
   943                           
   944                           ;ADC.c: 14:         ADCON1bits.ADFM = 0;
   945  003D  1683               	bsf	3,5	;RP0=1, select bank1
   946  003E  1303               	bcf	3,6	;RP1=0, select bank1
   947  003F  139F               	bcf	31,7	;volatile
   948                           
   949                           ;ADC.c: 15:         switch (ANA) {
   950  0040  28F4               	goto	l1042
   951  0041                     l101:	
   952                           ;ADC.c: 16:             case 0:
   953                           
   954                           
   955                           ;ADC.c: 17:                 TRISAbits.TRISA0 = 1;
   956  0041  1683               	bsf	3,5	;RP0=1, select bank1
   957  0042  1303               	bcf	3,6	;RP1=0, select bank1
   958  0043  1405               	bsf	5,0	;volatile
   959                           
   960                           ;ADC.c: 18:                 ANSELbits.ANS0 = 1;
   961  0044  1683               	bsf	3,5	;RP0=1, select bank3
   962  0045  1703               	bsf	3,6	;RP1=1, select bank3
   963  0046  1408               	bsf	8,0	;volatile
   964  0047                     l1010:
   965                           
   966                           ;ADC.c: 19:                 ADCON0bits.CHS = 0b0000;
   967  0047  30C3               	movlw	-61
   968  0048  1283               	bcf	3,5	;RP0=0, select bank0
   969  0049  1303               	bcf	3,6	;RP1=0, select bank0
   970  004A  059F               	andwf	31,f	;volatile
   971                           
   972                           ;ADC.c: 20:                 break;
   973  004B  2932               	goto	l136
   974  004C                     l103:	
   975                           ;ADC.c: 21:             case 1:
   976                           
   977                           
   978                           ;ADC.c: 22:                 TRISAbits.TRISA1 = 1;
   979  004C  1683               	bsf	3,5	;RP0=1, select bank1
   980  004D  1303               	bcf	3,6	;RP1=0, select bank1
   981  004E  1485               	bsf	5,1	;volatile
   982                           
   983                           ;ADC.c: 23:                 ANSELbits.ANS1 = 1;
   984  004F  1683               	bsf	3,5	;RP0=1, select bank3
   985  0050  1703               	bsf	3,6	;RP1=1, select bank3
   986  0051  1488               	bsf	8,1	;volatile
   987  0052                     l1012:
   988                           
   989                           ;ADC.c: 24:                 ADCON0bits.CHS = 0b0001;
   990  0052  1283               	bcf	3,5	;RP0=0, select bank0
   991  0053  1303               	bcf	3,6	;RP1=0, select bank0
   992  0054  081F               	movf	31,w	;volatile
   993  0055  39C3               	andlw	-61
   994  0056  3804               	iorlw	4
   995  0057  009F               	movwf	31	;volatile
   996                           
   997                           ;ADC.c: 25:                 break;
   998  0058  2932               	goto	l136
   999  0059                     l104:	
  1000                           ;ADC.c: 26:             case 2:
  1001                           
  1002                           
  1003                           ;ADC.c: 27:                 TRISAbits.TRISA2 = 1;
  1004  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1005  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1006  005B  1505               	bsf	5,2	;volatile
  1007                           
  1008                           ;ADC.c: 28:                 ANSELbits.ANS2 = 1;
  1009  005C  1683               	bsf	3,5	;RP0=1, select bank3
  1010  005D  1703               	bsf	3,6	;RP1=1, select bank3
  1011  005E  1508               	bsf	8,2	;volatile
  1012  005F                     l1014:
  1013                           
  1014                           ;ADC.c: 29:                 ADCON0bits.CHS = 0b0010;
  1015  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0061  081F               	movf	31,w	;volatile
  1018  0062  39C3               	andlw	-61
  1019  0063  3808               	iorlw	8
  1020  0064  009F               	movwf	31	;volatile
  1021                           
  1022                           ;ADC.c: 30:                 break;
  1023  0065  2932               	goto	l136
  1024  0066                     l105:	
  1025                           ;ADC.c: 31:             case 3:
  1026                           
  1027                           
  1028                           ;ADC.c: 32:                 TRISAbits.TRISA3 = 1;
  1029  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1031  0068  1585               	bsf	5,3	;volatile
  1032                           
  1033                           ;ADC.c: 33:                 ANSELbits.ANS3 = 1;
  1034  0069  1683               	bsf	3,5	;RP0=1, select bank3
  1035  006A  1703               	bsf	3,6	;RP1=1, select bank3
  1036  006B  1588               	bsf	8,3	;volatile
  1037  006C                     l1016:
  1038                           
  1039                           ;ADC.c: 34:                 ADCON0bits.CHS = 0b0011;
  1040  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1041  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1042  006E  081F               	movf	31,w	;volatile
  1043  006F  39C3               	andlw	-61
  1044  0070  380C               	iorlw	12
  1045  0071  009F               	movwf	31	;volatile
  1046                           
  1047                           ;ADC.c: 35:                 break;
  1048  0072  2932               	goto	l136
  1049  0073                     l106:	
  1050                           ;ADC.c: 36:             case 4:
  1051                           
  1052                           
  1053                           ;ADC.c: 37:                 TRISAbits.TRISA5 = 1;
  1054  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0075  1685               	bsf	5,5	;volatile
  1057                           
  1058                           ;ADC.c: 38:                 ANSELbits.ANS4 = 1;
  1059  0076  1683               	bsf	3,5	;RP0=1, select bank3
  1060  0077  1703               	bsf	3,6	;RP1=1, select bank3
  1061  0078  1608               	bsf	8,4	;volatile
  1062  0079                     l1018:
  1063                           
  1064                           ;ADC.c: 39:                 ADCON0bits.CHS = 0b0100;
  1065  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1066  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1067  007B  081F               	movf	31,w	;volatile
  1068  007C  39C3               	andlw	-61
  1069  007D  3810               	iorlw	16
  1070  007E  009F               	movwf	31	;volatile
  1071                           
  1072                           ;ADC.c: 40:                 break;
  1073  007F  2932               	goto	l136
  1074  0080                     l107:	
  1075                           ;ADC.c: 41:             case 5:
  1076                           
  1077                           
  1078                           ;ADC.c: 42:                 TRISEbits.TRISE0 = 1;
  1079  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1081  0082  1409               	bsf	9,0	;volatile
  1082                           
  1083                           ;ADC.c: 43:                 ANSELbits.ANS5 = 1;
  1084  0083  1683               	bsf	3,5	;RP0=1, select bank3
  1085  0084  1703               	bsf	3,6	;RP1=1, select bank3
  1086  0085  1688               	bsf	8,5	;volatile
  1087  0086                     l1020:
  1088                           
  1089                           ;ADC.c: 44:                 ADCON0bits.CHS = 0b0101;
  1090  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0088  081F               	movf	31,w	;volatile
  1093  0089  39C3               	andlw	-61
  1094  008A  3814               	iorlw	20
  1095  008B  009F               	movwf	31	;volatile
  1096                           
  1097                           ;ADC.c: 45:                 break;
  1098  008C  2932               	goto	l136
  1099  008D                     l108:	
  1100                           ;ADC.c: 46:             case 6:
  1101                           
  1102                           
  1103                           ;ADC.c: 47:                 TRISEbits.TRISE1 = 1;
  1104  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1105  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1106  008F  1489               	bsf	9,1	;volatile
  1107                           
  1108                           ;ADC.c: 48:                 ANSELbits.ANS6 = 1;
  1109  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1110  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1111  0092  1708               	bsf	8,6	;volatile
  1112  0093                     l1022:
  1113                           
  1114                           ;ADC.c: 49:                 ADCON0bits.CHS = 0b0110;
  1115  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0095  081F               	movf	31,w	;volatile
  1118  0096  39C3               	andlw	-61
  1119  0097  3818               	iorlw	24
  1120  0098  009F               	movwf	31	;volatile
  1121  0099                     l1024:
  1122                           
  1123                           ;ADC.c: 51:                 TRISEbits.TRISE2 = 1;
  1124  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1125  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1126  009B  1509               	bsf	9,2	;volatile
  1127  009C                     l1026:
  1128                           
  1129                           ;ADC.c: 52:                 ANSELbits.ANS7 = 1;
  1130  009C  1683               	bsf	3,5	;RP0=1, select bank3
  1131  009D  1703               	bsf	3,6	;RP1=1, select bank3
  1132  009E  1788               	bsf	8,7	;volatile
  1133                           
  1134                           ;ADC.c: 53:                 ADCON0bits.CHS = 0b0111;
  1135  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00A1  081F               	movf	31,w	;volatile
  1138  00A2  39C3               	andlw	-61
  1139  00A3  381C               	iorlw	28
  1140  00A4  009F               	movwf	31	;volatile
  1141                           
  1142                           ;ADC.c: 54:                 break;
  1143  00A5  2932               	goto	l136
  1144  00A6                     l110:	
  1145                           ;ADC.c: 55:             case 8:
  1146                           
  1147                           
  1148                           ;ADC.c: 56:                 TRISBbits.TRISB2 = 1;
  1149  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1150  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1151  00A8  1506               	bsf	6,2	;volatile
  1152                           
  1153                           ;ADC.c: 57:                 ANSELHbits.ANS8 = 1;
  1154  00A9  1683               	bsf	3,5	;RP0=1, select bank3
  1155  00AA  1703               	bsf	3,6	;RP1=1, select bank3
  1156  00AB  1409               	bsf	9,0	;volatile
  1157  00AC                     l1028:
  1158                           
  1159                           ;ADC.c: 58:                 ADCON0bits.CHS = 0b1000;
  1160  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00AE  081F               	movf	31,w	;volatile
  1163  00AF  39C3               	andlw	-61
  1164  00B0  3820               	iorlw	32
  1165  00B1  009F               	movwf	31	;volatile
  1166                           
  1167                           ;ADC.c: 59:                 break;
  1168  00B2  2932               	goto	l136
  1169  00B3                     l111:	
  1170                           ;ADC.c: 60:             case 9:
  1171                           
  1172                           
  1173                           ;ADC.c: 61:                 TRISBbits.TRISB3 = 1;
  1174  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00B5  1586               	bsf	6,3	;volatile
  1177                           
  1178                           ;ADC.c: 62:                 ANSELHbits.ANS9 = 1;
  1179  00B6  1683               	bsf	3,5	;RP0=1, select bank3
  1180  00B7  1703               	bsf	3,6	;RP1=1, select bank3
  1181  00B8  1489               	bsf	9,1	;volatile
  1182  00B9                     l1030:
  1183                           
  1184                           ;ADC.c: 63:                 ADCON0bits.CHS = 0b1001;
  1185  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1186  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1187  00BB  081F               	movf	31,w	;volatile
  1188  00BC  39C3               	andlw	-61
  1189  00BD  3824               	iorlw	36
  1190  00BE  009F               	movwf	31	;volatile
  1191                           
  1192                           ;ADC.c: 64:                 break;
  1193  00BF  2932               	goto	l136
  1194  00C0                     l112:	
  1195                           ;ADC.c: 65:             case 10:
  1196                           
  1197                           
  1198                           ;ADC.c: 66:                 TRISBbits.TRISB1 = 1;
  1199  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1200  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1201  00C2  1486               	bsf	6,1	;volatile
  1202                           
  1203                           ;ADC.c: 67:                 ANSELHbits.ANS10 = 1;
  1204  00C3  1683               	bsf	3,5	;RP0=1, select bank3
  1205  00C4  1703               	bsf	3,6	;RP1=1, select bank3
  1206  00C5  1509               	bsf	9,2	;volatile
  1207  00C6                     l1032:
  1208                           
  1209                           ;ADC.c: 68:                 ADCON0bits.CHS = 0b1010;
  1210  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1211  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1212  00C8  081F               	movf	31,w	;volatile
  1213  00C9  39C3               	andlw	-61
  1214  00CA  3828               	iorlw	40
  1215  00CB  009F               	movwf	31	;volatile
  1216                           
  1217                           ;ADC.c: 69:                 break;
  1218  00CC  2932               	goto	l136
  1219  00CD                     l113:	
  1220                           ;ADC.c: 70:             case 11:
  1221                           
  1222                           
  1223                           ;ADC.c: 71:                 TRISBbits.TRISB4 = 1;
  1224  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1225  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1226  00CF  1606               	bsf	6,4	;volatile
  1227                           
  1228                           ;ADC.c: 72:                 ANSELHbits.ANS11 = 1;
  1229  00D0  1683               	bsf	3,5	;RP0=1, select bank3
  1230  00D1  1703               	bsf	3,6	;RP1=1, select bank3
  1231  00D2  1589               	bsf	9,3	;volatile
  1232  00D3                     l1034:
  1233                           
  1234                           ;ADC.c: 73:                 ADCON0bits.CHS = 0b1011;
  1235  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1236  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1237  00D5  081F               	movf	31,w	;volatile
  1238  00D6  39C3               	andlw	-61
  1239  00D7  382C               	iorlw	44
  1240  00D8  009F               	movwf	31	;volatile
  1241                           
  1242                           ;ADC.c: 74:                 break;
  1243  00D9  2932               	goto	l136
  1244  00DA                     l114:	
  1245                           ;ADC.c: 75:             case 12:
  1246                           
  1247                           
  1248                           ;ADC.c: 76:                 TRISBbits.TRISB0 = 1;
  1249  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1250  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1251  00DC  1406               	bsf	6,0	;volatile
  1252                           
  1253                           ;ADC.c: 77:                 ANSELHbits.ANS12 = 1;
  1254  00DD  1683               	bsf	3,5	;RP0=1, select bank3
  1255  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  1256  00DF  1609               	bsf	9,4	;volatile
  1257  00E0                     l1036:
  1258                           
  1259                           ;ADC.c: 78:                 ADCON0bits.CHS = 0b1100;
  1260  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1261  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1262  00E2  081F               	movf	31,w	;volatile
  1263  00E3  39C3               	andlw	-61
  1264  00E4  3830               	iorlw	48
  1265  00E5  009F               	movwf	31	;volatile
  1266                           
  1267                           ;ADC.c: 79:                 break;
  1268  00E6  2932               	goto	l136
  1269  00E7                     l115:	
  1270                           ;ADC.c: 80:             case 13:
  1271                           
  1272                           
  1273                           ;ADC.c: 81:                 TRISBbits.TRISB5 = 1;
  1274  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1275  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1276  00E9  1686               	bsf	6,5	;volatile
  1277                           
  1278                           ;ADC.c: 82:                 ANSELHbits.ANS13 = 1;
  1279  00EA  1683               	bsf	3,5	;RP0=1, select bank3
  1280  00EB  1703               	bsf	3,6	;RP1=1, select bank3
  1281  00EC  1689               	bsf	9,5	;volatile
  1282  00ED                     l1038:
  1283                           
  1284                           ;ADC.c: 83:                 ADCON0bits.CHS = 0b1101;
  1285  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1286  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1287  00EF  081F               	movf	31,w	;volatile
  1288  00F0  39C3               	andlw	-61
  1289  00F1  3834               	iorlw	52
  1290  00F2  009F               	movwf	31	;volatile
  1291                           
  1292                           ;ADC.c: 84:                 break;
  1293  00F3  2932               	goto	l136
  1294  00F4                     l1042:
  1295  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1297  00F6  0843               	movf	ADC@ANA,w
  1298  00F7  00C1               	movwf	??_ADC
  1299  00F8  01C2               	clrf	??_ADC+1
  1300                           
  1301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 1, Range of values is 0 to 0
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte            4     3 (average)
  1307                           ; direct_byte           11     8 (fixed)
  1308                           ; jumptable            260     6 (fixed)
  1309                           ;	Chosen strategy is simple_byte
  1310  00F9  0842               	movf	??_ADC+1,w
  1311  00FA  3A00               	xorlw	0	; case 0
  1312  00FB  1903               	skipnz
  1313  00FC  28FE               	goto	l1118
  1314  00FD  2932               	goto	l136
  1315  00FE                     l1118:
  1316                           
  1317                           ; Switch size 1, requested type "simple"
  1318                           ; Number of cases is 14, Range of values is 0 to 13
  1319                           ; switch strategies available:
  1320                           ; Name         Instructions Cycles
  1321                           ; simple_byte           43    22 (average)
  1322                           ; direct_byte           50     8 (fixed)
  1323                           ; jumptable            260     6 (fixed)
  1324                           ;	Chosen strategy is simple_byte
  1325  00FE  0841               	movf	??_ADC,w
  1326  00FF  3A00               	xorlw	0	; case 0
  1327  0100  1903               	skipnz
  1328  0101  2841               	goto	l101
  1329  0102  3A01               	xorlw	1	; case 1
  1330  0103  1903               	skipnz
  1331  0104  284C               	goto	l103
  1332  0105  3A03               	xorlw	3	; case 2
  1333  0106  1903               	skipnz
  1334  0107  2859               	goto	l104
  1335  0108  3A01               	xorlw	1	; case 3
  1336  0109  1903               	skipnz
  1337  010A  2866               	goto	l105
  1338  010B  3A07               	xorlw	7	; case 4
  1339  010C  1903               	skipnz
  1340  010D  2873               	goto	l106
  1341  010E  3A01               	xorlw	1	; case 5
  1342  010F  1903               	skipnz
  1343  0110  2880               	goto	l107
  1344  0111  3A03               	xorlw	3	; case 6
  1345  0112  1903               	skipnz
  1346  0113  288D               	goto	l108
  1347  0114  3A01               	xorlw	1	; case 7
  1348  0115  1903               	skipnz
  1349  0116  2899               	goto	l1024
  1350  0117  3A0F               	xorlw	15	; case 8
  1351  0118  1903               	skipnz
  1352  0119  28A6               	goto	l110
  1353  011A  3A01               	xorlw	1	; case 9
  1354  011B  1903               	skipnz
  1355  011C  28B3               	goto	l111
  1356  011D  3A03               	xorlw	3	; case 10
  1357  011E  1903               	skipnz
  1358  011F  28C0               	goto	l112
  1359  0120  3A01               	xorlw	1	; case 11
  1360  0121  1903               	skipnz
  1361  0122  28CD               	goto	l113
  1362  0123  3A07               	xorlw	7	; case 12
  1363  0124  1903               	skipnz
  1364  0125  28DA               	goto	l114
  1365  0126  3A01               	xorlw	1	; case 13
  1366  0127  1903               	skipnz
  1367  0128  28E7               	goto	l115
  1368  0129  2932               	goto	l136
  1369  012A                     l1044:
  1370  012A  0340               	decf	ADC@justificado,w
  1371  012B  1D03               	btfss	3,2
  1372  012C  292E               	goto	u141
  1373  012D  292F               	goto	u140
  1374  012E                     u141:
  1375  012E  2932               	goto	l136
  1376  012F                     u140:
  1377  012F                     l1046:
  1378                           
  1379                           ;ADC.c: 89:         ADCON1bits.ADFM = 1;
  1380  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0131  179F               	bsf	31,7	;volatile
  1383  0132                     l136:	
  1384                           ;ADC.c: 90:         switch (ANA) {
  1385                           
  1386  0132  0008               	return
  1387  0133                     __end_of_ADC:
  1388                           
  1389                           	psect	text4
  1390  0166                     __ptext4:	
  1391 ;; *************** function _isr *****************
  1392 ;; Defined at:
  1393 ;;		line 60 in file "Lab2Digital.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          4       0       0       0       0
  1410 ;;      Totals:         4       0       0       0       0
  1411 ;;Total ram usage:        4 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    1
  1414 ;; This function calls:
  1415 ;;		i1_delay
  1416 ;; This function is called by:
  1417 ;;		Interrupt level 1
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _isr
  1423  0166                     _isr:
  1424  0166                     i1l892:
  1425                           
  1426                           ;Lab2Digital.c: 61: 
  1427  0166  1C0B               	btfss	11,0	;volatile
  1428  0167  2969               	goto	u7_21
  1429  0168  296A               	goto	u7_20
  1430  0169                     u7_21:
  1431  0169  297A               	goto	i1l902
  1432  016A                     u7_20:
  1433  016A                     i1l894:
  1434                           
  1435                           ;Lab2Digital.c: 62: 
  1436  016A  1C06               	btfss	6,0	;volatile
  1437  016B  296D               	goto	u8_21
  1438  016C  296E               	goto	u8_20
  1439  016D                     u8_21:
  1440  016D  2973               	goto	i1l56
  1441  016E                     u8_20:
  1442  016E                     i1l896:
  1443                           
  1444                           ;Lab2Digital.c: 63: 
  1445  016E  3001               	movlw	1
  1446  016F  00F4               	movwf	??_isr
  1447  0170  0874               	movf	??_isr,w
  1448  0171  0788               	addwf	8,f	;volatile
  1449                           
  1450                           ;Lab2Digital.c: 65:         delay(5000);
  1451  0172  2979               	goto	i1l900
  1452  0173                     i1l56:
  1453  0173  1C86               	btfss	6,1	;volatile
  1454  0174  2976               	goto	u9_21
  1455  0175  2977               	goto	u9_20
  1456  0176                     u9_21:
  1457  0176  2979               	goto	i1l900
  1458  0177                     u9_20:
  1459  0177                     i1l898:
  1460                           
  1461                           ;Lab2Digital.c: 66:     }
  1462  0177  3001               	movlw	1
  1463  0178  0288               	subwf	8,f	;volatile
  1464  0179                     i1l900:
  1465                           
  1466                           ;Lab2Digital.c: 69:     return;
  1467  0179  100B               	bcf	11,0	;volatile
  1468  017A                     i1l902:
  1469                           
  1470                           ;Lab2Digital.c: 71: 
  1471  017A  1F0C               	btfss	12,6	;volatile
  1472  017B  297D               	goto	u10_21
  1473  017C  297E               	goto	u10_20
  1474  017D                     u10_21:
  1475  017D  298F               	goto	i1l60
  1476  017E                     u10_20:
  1477  017E                     i1l904:
  1478                           
  1479                           ;Lab2Digital.c: 72: 
  1480  017E  081E               	movf	30,w	;volatile
  1481  017F  00F4               	movwf	??_isr
  1482  0180  0874               	movf	??_isr,w
  1483  0181  00FA               	movwf	_contador
  1484                           
  1485                           ;Lab2Digital.c: 73: 
  1486  0182  087A               	movf	_contador,w
  1487  0183  0087               	movwf	7	;volatile
  1488  0184                     i1l906:
  1489                           
  1490                           ;Lab2Digital.c: 74: 
  1491  0184  130C               	bcf	12,6	;volatile
  1492  0185                     i1l908:
  1493                           
  1494                           ;Lab2Digital.c: 75: 
  1495  0185  30D0               	movlw	208
  1496  0186  120A  118A  21C5  120A  118A  	fcall	i1_delay
  1497  018B                     i1l910:
  1498                           
  1499                           ;Lab2Digital.c: 76: void setup(void) {
  1500  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1501  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1502  018D  130C               	bcf	12,6	;volatile
  1503  018E                     i1l912:
  1504                           
  1505                           ;Lab2Digital.c: 77: 
  1506  018E  149F               	bsf	31,1	;volatile
  1507  018F                     i1l60:
  1508  018F  0877               	movf	??_isr+3,w
  1509  0190  00FF               	movwf	btemp+1
  1510  0191  0876               	movf	??_isr+2,w
  1511  0192  008A               	movwf	10
  1512  0193  0E75               	swapf	??_isr+1,w
  1513  0194  0083               	movwf	3
  1514  0195  0EFE               	swapf	btemp,f
  1515  0196  0E7E               	swapf	btemp,w
  1516  0197  0009               	retfie
  1517  0198                     __end_of_isr:
  1518                           
  1519                           	psect	intentry
  1520  0004                     __pintentry:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1523                           
  1524  0004                     interrupt_function:
  1525  007E                     saved_w	set	btemp
  1526  0004  00FE               	movwf	btemp
  1527  0005  0E03               	swapf	3,w
  1528  0006  00F5               	movwf	??_isr+1
  1529  0007  080A               	movf	10,w
  1530  0008  00F6               	movwf	??_isr+2
  1531  0009  1283               	bcf	3,5	;RP0=0, select bank0
  1532  000A  1303               	bcf	3,6	;RP1=0, select bank0
  1533  000B  087F               	movf	btemp+1,w
  1534  000C  00F7               	movwf	??_isr+3
  1535  000D  120A  118A  2966   	ljmp	_isr
  1536                           
  1537                           	psect	text5
  1538  01C5                     __ptext5:	
  1539 ;; *************** function i1_delay *****************
  1540 ;; Defined at:
  1541 ;;		line 151 in file "Lab2Digital.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  n               1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  n               1  (no storage) unsigned char 
  1546 ;;  j               2    2[COMMON] int 
  1547 ;;  i               2    0[COMMON] int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, btemp+1
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         4       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         4       0       0       0       0
  1561 ;;Total ram usage:        4 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_isr
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function i1_delay
  1572  01C5                     i1_delay:
  1573  01C5                     i1l872:	
  1574                           ;incstack = 0
  1575                           ; Regs used in i1_delay: [wreg+status,2+btemp+1]
  1576                           
  1577                           
  1578                           ;Lab2Digital.c: 152:     for (int i = 0; i < 255; i++) {
  1579  01C5  01F0               	clrf	i1delay@i
  1580  01C6  01F1               	clrf	i1delay@i+1
  1581  01C7                     i1l878:
  1582                           
  1583                           ;Lab2Digital.c: 153:         for (int j = 0; j < 255; j++) {
  1584  01C7  01F2               	clrf	i1delay@j
  1585  01C8  01F3               	clrf	i1delay@j+1
  1586  01C9                     i1l884:
  1587                           
  1588                           ;Lab2Digital.c: 154:         }
  1589  01C9  3001               	movlw	1
  1590  01CA  07F2               	addwf	i1delay@j,f
  1591  01CB  1803               	skipnc
  1592  01CC  0AF3               	incf	i1delay@j+1,f
  1593  01CD  3000               	movlw	0
  1594  01CE  07F3               	addwf	i1delay@j+1,f
  1595  01CF                     i1l886:
  1596  01CF  0873               	movf	i1delay@j+1,w
  1597  01D0  3A80               	xorlw	128
  1598  01D1  00FF               	movwf	btemp+1
  1599  01D2  3080               	movlw	128
  1600  01D3  027F               	subwf	btemp+1,w
  1601  01D4  1D03               	skipz
  1602  01D5  29D8               	goto	u5_25
  1603  01D6  30FF               	movlw	255
  1604  01D7  0272               	subwf	i1delay@j,w
  1605  01D8                     u5_25:
  1606  01D8  1C03               	skipc
  1607  01D9  29DB               	goto	u5_21
  1608  01DA  29DC               	goto	u5_20
  1609  01DB                     u5_21:
  1610  01DB  29C9               	goto	i1l884
  1611  01DC                     u5_20:
  1612  01DC                     i1l888:
  1613                           
  1614                           ;Lab2Digital.c: 155:     }
  1615  01DC  3001               	movlw	1
  1616  01DD  07F0               	addwf	i1delay@i,f
  1617  01DE  1803               	skipnc
  1618  01DF  0AF1               	incf	i1delay@i+1,f
  1619  01E0  3000               	movlw	0
  1620  01E1  07F1               	addwf	i1delay@i+1,f
  1621  01E2                     i1l890:
  1622  01E2  0871               	movf	i1delay@i+1,w
  1623  01E3  3A80               	xorlw	128
  1624  01E4  00FF               	movwf	btemp+1
  1625  01E5  3080               	movlw	128
  1626  01E6  027F               	subwf	btemp+1,w
  1627  01E7  1D03               	skipz
  1628  01E8  29EB               	goto	u6_25
  1629  01E9  30FF               	movlw	255
  1630  01EA  0270               	subwf	i1delay@i,w
  1631  01EB                     u6_25:
  1632  01EB  1C03               	skipc
  1633  01EC  29EE               	goto	u6_21
  1634  01ED  29EF               	goto	u6_20
  1635  01EE                     u6_21:
  1636  01EE  29C7               	goto	i1l878
  1637  01EF                     u6_20:
  1638  01EF                     i1l78:
  1639  01EF  0008               	return
  1640  01F0                     __end_ofi1_delay:
  1641  007E                     btemp	set	126	;btemp
  1642  007E                     wtemp0	set	126
  1643                           
  1644                           	psect	config
  1645                           
  1646                           ;Config register CONFIG1 @ 0x2007
  1647                           ;	Oscillator Selection bits
  1648                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1649                           ;	Watchdog Timer Enable bit
  1650                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1651                           ;	Power-up Timer Enable bit
  1652                           ;	PWRTE = OFF, PWRT disabled
  1653                           ;	RE3/MCLR pin function select bit
  1654                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1655                           ;	Code Protection bit
  1656                           ;	CP = OFF, Program memory code protection is disabled
  1657                           ;	Data Code Protection bit
  1658                           ;	CPD = OFF, Data memory code protection is disabled
  1659                           ;	Brown Out Reset Selection bits
  1660                           ;	BOREN = OFF, BOR disabled
  1661                           ;	Internal External Switchover bit
  1662                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1663                           ;	Fail-Safe Clock Monitor Enabled bit
  1664                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1665                           ;	Low Voltage Programming Enable bit
  1666                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1667                           ;	In-Circuit Debugger Mode bit
  1668                           ;	DEBUG = 0x1, unprogrammed default
  1669  2007                     	org	8199
  1670  2007  20F4               	dw	8436
  1671                           
  1672                           ;Config register CONFIG2 @ 0x2008
  1673                           ;	Brown-out Reset Selection bit
  1674                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1675                           ;	Flash Program Memory Self Write Enable bits
  1676                           ;	WRT = OFF, Write protection off
  1677  2008                     	org	8200
  1678  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      4      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_delay

Critical Paths under _main in BANK0

    _main->_ADC
    _main->_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     256
                                _ADC
                              _delay
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     5      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     3      1     164
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      60
                                              4 COMMON     4     4      0
                            i1_delay
 ---------------------------------------------------------------------------------
 (3) i1_delay                                              5     5      0      60
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _delay
   _setup

 _isr (ROOT)
   i1_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 16:16:02 2021

                      pc 0002                       l71 01C4                       l78 0165  
                     fsr 0004                      l101 0041                      l110 00A6  
                    l111 00B3                      l103 004C                      l112 00C0  
                    l104 0059                      l113 00CD                      l105 0066  
                    l114 00DA                      l106 0073                      l115 00E7  
                    l107 0080                      l108 008D                      l136 0132  
                    _ADC 0028                      l950 0137                      l960 0150  
                    l944 0133                      l962 0158                      l970 01A9  
                    l956 013B                      l980 01B8                      l972 01AC  
                    l964 0198                      l958 0143                      l990 01BF  
                    l982 01BB                      l974 01AF                      l966 01A2  
                    l992 01C2                      l984 01BC                      l976 01B2  
                    l968 01A6                      l994 01C3                      l986 01BD  
                    l978 01B5                      l996 002B                      l988 01BE  
                    l998 002C                      u110 0150                      u111 014F  
                    u120 0165                      u121 0164                      u130 003D  
                    u131 003C                      u115 014C                      u140 012F  
                    u141 012E                      u125 0161                      _isr 0166  
                    indf 0000                     ?_ADC 0040                     l1000 0030  
                   l1010 0047                     l1002 0033                     l1020 0086  
                   l1012 0052                     l1004 0034                     l1030 00B9  
                   l1022 0093                     l1014 005F                     l1006 0035  
                   l1032 00C6                     l1024 0099                     l1016 006C  
                   l1008 003D                     l1034 00D3                     l1026 009C  
                   l1018 0079                     l1042 00F4                     l1036 00E0  
                   l1028 00AC                     l1044 012A                     l1046 012F  
                   l1118 00FE                     l1038 00ED                     l1090 01F5  
                   l1092 01FB                     l1094 0204                     l1096 0207  
                   l1088 01F0                     ?_isr 0070                     i1l60 018F  
                   i1l56 0173                     i1l78 01EF                     u5_20 01DC  
                   u5_21 01DB                     u5_25 01D8                     u6_20 01EF  
                   u6_21 01EE                     u6_25 01EB                     u7_20 016A  
                   u7_21 0169                     u8_20 016E                     u8_21 016D  
                   u9_20 0177                     u9_21 0176                     _main 01F0  
                   btemp 007E          __end_ofi1_delay 01F0                     start 0010  
                  ??_ADC 0041                    ??_isr 0074                    ?_main 0070  
                  _ANSEL 0188                    i1l900 0179                    i1l910 018B  
                  i1l902 017A                    i1l912 018E                    i1l904 017E  
                  i1l906 0184                    i1l908 0185                    i1l872 01C5  
                  i1l890 01E2                    i1l884 01C9                    i1l892 0166  
                  i1l886 01CF                    i1l878 01C7                    i1l894 016A  
                  i1l888 01DC                    i1l896 016E                    i1l898 0177  
                  u10_20 017E                    u10_21 017D                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _delay 0133                    _hexa1 0079                    _hexa2 0078  
                  _setup 0198                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 0211  
                 ADC@ANA 0043                   ??_main 0044                   ?_delay 0070  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
              ??i1_delay 0070                   delay@i 0040                   delay@j 0042  
                 delay@n 0070                   saved_w 007E  __end_of__initialization 0024  
         ADC@justificado 0040           __pcstackCOMMON 0070             __pidataBANK0 0211  
          __end_of_delay 0166            __end_of_setup 01C5                  ??_delay 0040  
                ??_setup 0040               __pmaintext 01F0               __pintentry 0004  
                i1_delay 01C5                _ANSELbits 0188                  __ptext1 0198  
                __ptext2 0133                  __ptext3 0028                  __ptext4 0166  
                __ptext5 01C5             __size_of_ADC 010B             __size_of_isr 0032  
                _numeros 0020     end_of_initialization 0024                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
    start_initialization 0013              __end_of_ADC 0133              __end_of_isr 0198  
             init_fetch0 0231              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0040                 ?i1_delay 0070  
         __size_of_delay 0033           __size_of_setup 002D        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 i1delay@i 0070  
               i1delay@j 0072         __size_ofi1_delay 002B               _ANSELHbits 0189  
               _contador 007A            __size_of_main 0021               _INTCONbits 000B  
               init_ram0 0235                 intlevel1 0000  
